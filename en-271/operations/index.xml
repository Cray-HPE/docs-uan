<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>User Access Node (UAN)</title>
    <link>/docs-uan/en-271/operations/</link>
    <description>Recent content on User Access Node (UAN)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 29 Jan 2024 03:04:15 +0000</lastBuildDate><atom:link href="/docs-uan/en-271/operations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/basic_uan_configuration/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:04 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/basic_uan_configuration/</guid>
      <description>Basic UAN Configuration UAN configuration overview The Configuration Framework Service (CFS) performs the configuration of UAN nodes. CFS can apply configuration to both images and nodes. When the configuration is applied to nodes, the nodes must be booted and accessible through SSH over the Node Management Network (NMN).
The preferred method of creating CFS configurations is to use the Shasta Admin Toolkit (SAT) sat bootprep command. This command automates the manual process described in Create UAN Boot Images.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/build_a_new_uan_image_using_the_cos_recipe/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:05 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/build_a_new_uan_image_using_the_cos_recipe/</guid>
      <description>Build a New UAN Image Using a COS Recipe Prior to HPE Cray Supercomputing UAN release 2.3, a similar copy of the COS image recipe was imported with the UAN install. Beginning with the 2.3 release, this product does not install an image recipe. A COS image recipe must be used. Additional UAN packages will be installed by CFS and the uan_packages role. In UAN release 2.6, this procedure is automated as part of the IUF process of installing and upgrading the UAN product.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/create_uan_boot_images/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:06 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/create_uan_boot_images/</guid>
      <description>Create UAN Boot Images Beginning with UAN 2.6, the procedures described here are automatically performed by IUF during installation and upgrade of the HPE Cray Supercomputing UAN product. See Install or Upgrade UAN for details. The procedures shown here are for cases when a new image is needed after the UAN product is installed or upgraded and the product release is prior to 2.6. For release 2.6 and newer, perform Build a New UAN Image Using a COS Recipe for these cases.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/mount_a_new_file_system_on_an_uan/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:06 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/mount_a_new_file_system_on_an_uan/</guid>
      <description>Mount a New File System on a UAN Perform this procedure to create a mount point for a new file system on a UAN.
Perform Steps 1-9 of Create UAN Boot Images.
Create a directory for Application role nodes.
ncn-w001# mkdir -p group_vars/Application Define the home directory information for the new file system in the filesystems.yml file.
ncn-w001# vi group_vars/Application/filesystems.yml --- filesystems: - src: 10.252.1.1:/home mount_point: /home fstype: nfs4 opts: rw,noauto state: mounted Add the change from the working directory to the staging area.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/configure_interfaces_on_uans/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:05 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/configure_interfaces_on_uans/</guid>
      <description>Configure Interfaces on UANs Perform this procedure to configure network interfaces on UANs by editing a configuration file.
The uan_interfaces Ansible role performs interface configuration. For details on the variables used in this procedure, see uan_interfaces.
In the command examples of this procedure, PRODUCT_VERSION refers to the current installed version of the HPE Cray Supercomputing UAN product. Replace PRODUCT_VERSION with the product version number string when executing the commands.
Node Management Networking By default, the Node Management Network (NMN) is connected to a single nmn0 interface.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/configure_pluggable_authentication_modules_pam_on_uans/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:06 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/configure_pluggable_authentication_modules_pam_on_uans/</guid>
      <description>Configure Pluggable Authentication Modules (PAM) on UANs Perform this procedure to configure PAM on UANs. PAM enables dynamic authentication support for system services.
Initialize and configure the Cray CLI tool on the system. See &amp;ldquo;Configure the Cray Command Line Interface (CLI)&amp;rdquo; in the CSM documentation for more information.
Verify that the Gitea Version Control Service (VCS) is running.
ncn-m001# kubectl get pods --all-namespaces | grep vcs services gitea-vcs-f57c54c4f-j8k4t 2/2 Running 1 11d services gitea-vcs-postgres-0 2/2 Running 0 11d Retrieve the initial Gitea login credentials for the crayvcs user name.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/boot_uans/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:04 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/boot_uans/</guid>
      <description>Boot UANs Perform this procedure to boot UANs using BOS so that they are ready for user logins.
Prerequisites IUF is not being used to automate this process Create UAN Boot Images Procedure Create a BOS session to boot the UAN nodes. Replace uan-sessiontemplate-PRODUCT_VERSION in the following command with the ID of the session template created by the initial HPE Cray Supercomputing UAN product installation or the UAN product upgrade process.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/cve-2023-0461/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:05 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/cve-2023-0461/</guid>
      <description>Mitigation for CVE-2023-0461 Description There is a use-after-free vulnerability in the Linux Kernel which can be exploited to achieve local privilege escalation. To reach the vulnerability kernel configuration flag CONFIG_TLS or CONFIG_XFRM_ESPINTCP has to be configured, but the operation does not require any privilege. There is a use-after-free bug of icsk_ulp_data of a struct inet_connection_sock. When CONFIG_TLS is enabled, a user can install a TLS context (struct tls_context) on a connected TCP socket.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_packages/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:10 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_packages/</guid>
      <description>uan_packages The uan_packages role adds or removes additional repositories and RPMs on UANs using the Ansible zypper_repository and zypper module.
Repositories and packages added to this role will be installed or removed during image customization. Installing RPMs during post-boot node configuration can cause high system loads on large systems so these tasks run only during image customizations.
This role will only run on SLES-based nodes.
Requirements Zypper must be installed.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_shadow/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:10 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_shadow/</guid>
      <description>uan_shadow The uan_shadow role configures the root password on UAN nodes.
Requirements The root password hash has to be installed in HashiCorp Vault at secret/uan root_password.
Role Variables Available variables are in the following list, including default values (see defaults/main.yml):
uan_vault_url The URL for the HashiCorp Vault
Example:
uan_vault_url: &amp;#34;http://cray-vault.vault:8200&amp;#34; uan_vault_role_file The required Kubernetes role file for HashiCorp Vault access.
Example:
uan_vault_role_file: /var/run/secrets/kubernetes.io/serviceaccount/namespace uan_vault_jwt_file The path to the required Kubernetes token file for HashiCorp Vault access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_ldap/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:09 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_ldap/</guid>
      <description>uan_ldap The uan_ldap role configures LDAP and AD groups on UAN nodes.
Requirements NSCD, pam-config, sssd.
Role Variables Available variables are in the following list, including default values (see defaults/main.yml):
uan_ldap_setup A Boolean variable to selectively skip the setup of LDAP on nodes it would otherwise be configured due to uan_ldap_config being defined. The default setting is to setup LDAP when uan_ldap_config is not empty.
Example:
uan_ldap_setup: yes uan_ldap_config Configures LDAP domains and servers.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_motd/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:09 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_motd/</guid>
      <description>uan_motd The uan_motd role appends text to the /etc/motd file.
Requirements None.
Role Variables Available variables are in the following list, including default values (see defaults/main.yml):
uan_motd_content: [] uan_motd_content Contains text to be added to the end of the /etc/motd file.
Dependencies None.
Example Playbook - hosts: Application_UAN roles: - { role: uan_motd, uan_motd_content: &amp;#34;MOTD CONTENT&amp;#34; } This role is included in the UAN site.yml play.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_hardening/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:08 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_hardening/</guid>
      <description>uan_hardening The uan_hardening role configures site or customer-defined network security of UANs, for example preventing SSH access from the UAN over the NMN to NCN nodes.
Requirements None.
Role Variables Available variables are in the following list, including default values (see defaults/main.yml):
disable_ssh_out_nmn_to_management_ncns Boolean variable controlling whether firewall rules are applied at the UAN to prevent SSH outbound over the NMN to the NCN management nodes.
The default value of disable_ssh_out_nmn_to_management_ncns is yes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_interfaces/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:08 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_interfaces/</guid>
      <description>uan_interfaces The uan_interfaces role configures site or customer-defined network interfaces and Customer Access Network (CAN) network interfaces on UAN nodes.
Requirements None.
Role Variables Available variables are in the following list, including default values (see defaults/main.yml):
uan_nmn_bond A Boolean variable controlling the configuration of the Node Management Network (NMN). When true, the NMN network connection will be configured as a bonded pair of interfaces defined by the members of the uan_nmn_bond_slaves variable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_disk_config/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:07 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_disk_config/</guid>
      <description>uan_disk_config The uan_disk_config role configures swap and scratch disk partitions on UAN nodes.
Requirements There must be disk devices found on the UAN node by the device_filter module or this role will exit with failure. This condition can be ignored by setting uan_require_disk to false. See the following list for variable definitions.
See the library/device_filter.py file for more information on this module.
The device that is found will be unmounted if mounted and a swap partition will be created on the first half of the disk.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_gpg_keys/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:07 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_gpg_keys/</guid>
      <description>uan_gpg_keys The uan_gpg_keys role installs the CSM GPG signing public key. This role is a dependency of the uan_packages role.
Requirements The Kubernetes secret must be available in the namespace and field specified by the following uan_gpg_key_* variables. The key must be stored as a base64-encoded string.
Role Variables Available variables are in the following list, including default values (defined in defaults/main.yml):
uan_gpg_key_k8s_secret The Kubernetes secret which contains the GPG public key.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs-uan/en-271/operations/uan_ca_cert/</link>
      <pubDate>Mon, 29 Jan 2024 03:04:06 +0000</pubDate>
      
      <guid>/docs-uan/en-271/operations/uan_ca_cert/</guid>
      <description>uan_ca_cert The uan_ca_cert role installs a CA certificate onto the system.
Requirements None.
Role Variables None.
Dependencies None.
Example Playbook - hosts: Application roles: - role: uan_ca_cert This role is included in the UAN site.yml play.</description>
    </item>
    
  </channel>
</rss>
